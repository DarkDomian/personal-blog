import type { Metadata } from "next";
import localFont from "next/font/local";
import Header from "@/components/Header";
import { Providers } from "@/components/Proveders";
import "./globals.css";

// import { i18n, type Locale } from "@/i18n-config";

// export async function generateStaticParams() {
//   return i18n.locales
//     // .filter((locale) => locale !== i18n.defaultLocale)
//     .map((locale) => ({ lang: locale }));
// }

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
//   children,
//   params,
// }: {
//   children: React.ReactNode;
//   params: { lang: Locale };
// }) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-light dark:bg-dark text-dark dark:text-light transition-all duration-200`}
      >
        <Providers>
          <Header />
          {children}
        </Providers>
      </body>
    </html>
  );
}



// export default function Root({
//   children,
//   params,
// }: {
//   children: React.ReactNode;
//   params: { lang: Locale };
// }) {
//   return (
//     <html lang={params.lang}>
//       <body>{children}</body>
//     </html>
//   );
// }