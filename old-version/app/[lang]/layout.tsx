// import type { Metadata } from "next";
// import localFont from "next/font/local";




// import { i18n, type Locale } from "@/i18n-config";

// export async function generateStaticParams() {
//   return i18n.locales
//     .filter((locale) => locale !== i18n.defaultLocale)
//     .map((locale) => ({ lang: locale }));
// }

// const geistSans = localFont({
//   src: "@/app/fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900", 
// });
// const geistMono = localFont({
//   src: "@/app/fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
//   children,
//   params,
// }: {
//   children: React.ReactNode[];
//   params: { lang: Locale };
// }) {
  return (
    <>
    {/* <p>the language are {params.lang}</p> */}
    {children}
    </>
  ) 


}



// export default function Root({
//   children,
//   params,
// }: {
//   children: React.ReactNode;
//   params: { lang: Locale };
// }) {
//   return (
//     <html lang={params.lang}>
//       <body>{children}</body>
//     </html>
//   );
// }